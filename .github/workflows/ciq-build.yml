name: CIQ Build

on:
  workflow_dispatch:
  push:
    paths:
      - "source/**"
      - "resources/**"
      - "manifest.xml"
      - "tools/**"
      - ".github/workflows/ciq-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Normaliser encodages + créer jungle minimal
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(manifest.xml resources/**/*.xml source/**/*.mc)
          for f in "${files[@]}"; do
            [ -f "$f" ] || continue
            # strip BOM
            awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          done
          printf '%s\n' \
            'project.manifest = manifest.xml' \
            'base.sourcePath = source' \
            'base.resourcePath = resources' > monkey.jungle
          mkdir -p bin

      - name: Déposer la developer_key (depuis le secret)
        env:
          CIQ_DEV_KEY_B64: ${{ secrets.CIQ_DEV_KEY_B64 }}
        run: |
          set -euo pipefail
          : "${CIQ_DEV_KEY_B64:?Secret CIQ_DEV_KEY_B64 manquant}"
          echo "$CIQ_DEV_KEY_B64" | base64 -d > developer_key
          chmod 600 developer_key
          test -s developer_key

      - name: Forcer compat vívoactive 4/4s dans le manifest
        run: |
          set -euo pipefail
          sed -i 's/minSdkVersion="[^"]*"/minSdkVersion="3.1.0"/' manifest.xml
          perl -0777 -pe 's|<iq:products>.*?</iq:products>|<iq:products><iq:product id="vivoactive4"/><iq:product id="vivoactive4s"/></iq:products>|s' -i manifest.xml
          grep -n 'vivoactive4' manifest.xml || true

      - name: Écrire tools/projectInfo.xml (propre et complet)
        working-directory: tools
        run: |
          set -euo pipefail
          # Ici-doc YAML-safe (on retire ensuite l'indentation ajoutée par YAML)
          cat > projectInfo.xml <<'XML'
            <?xml version="1.0" encoding="UTF-8"?>
            <iq:projectInfo xmlns:iq="http://www.garmin.com/xml/connectiq">
              <iq:application>
                <iq:entry filename="../manifest.xml"/>
                <iq:languages primary="en-US"/>
                <iq:permissions/>
                <iq:products>
                  <iq:product id="vivoactive4"/>
                  <iq:product id="vivoactive4s"/>
                </iq:products>
              </iq:application>
              <iq:environment>
                <iq:apiDb path="api.db"/>
                <iq:apiMir path="api.mir"/>
                <iq:compilerInfo path="compilerInfo.xml"/>
              </iq:environment>
            </iq:projectInfo>
          XML
          # Supprime les 2 espaces d'indentation introduits par YAML
          sed -i 's/^  //' projectInfo.xml

          # Validation rapide (échoue si XML mal formé)
          python3 - <<'PY'
import xml.dom.minidom as m
m.parse('projectInfo.xml')
print('projectInfo.xml OK')
PY

      - name: Build .iq (via projectInfo.xml uniquement)
        working-directory: tools
        run: |
          set -euxo pipefail
          JAR="$PWD/monkeybrains-8.1.1.jar"
          PINFO="$PWD/projectInfo.xml"
          JUNGLE="$GITHUB_WORKSPACE/monkey.jungle"
          OUT="$GITHUB_WORKSPACE/bin/OWSwim_VA4.iq"
          KEY="$GITHUB_WORKSPACE/developer_key"

          test -s "$JAR"
          test -s "$PINFO"
          test -s "$PWD/api.db"
          test -s "$PWD/api.mir"
          test -s "$PWD/compilerInfo.xml"

          # Pas de -d / -u : devices pris depuis <iq:products>
          java -Xms1g -Dfile.encoding=UTF-8 -jar "$JAR" \
            -p "$PINFO" \
            -f "$JUNGLE" \
            -o "$OUT" \
            -y "$KEY" \
            -e -w

          ls -l "$OUT"

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OWSwim_VA4
          path: bin/*.iq
