name: CIQ Build

on:
  workflow_dispatch:
  push:
    paths:
      - "source/**"
      - "resources/**"
      - "manifest.xml"
      - "tools/**"
      - ".github/workflows/ciq-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Normalize encodings + create minimal jungle
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(manifest.xml resources/**/*.xml source/**/*.mc)
          for f in "${files[@]}"; do
            [ -f "$f" ] || continue
            awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          done
          printf '%s\n' \
            'project.manifest = manifest.xml' \
            'base.sourcePath = source' \
            'base.resourcePath = resources' > monkey.jungle
          mkdir -p bin

      - name: Write developer_key from secret
        env:
          CIQ_DEV_KEY_B64: ${{ secrets.CIQ_DEV_KEY_B64 }}
        run: |
          set -euo pipefail
          : "${CIQ_DEV_KEY_B64:?Secret CIQ_DEV_KEY_B64 missing}"
          echo "$CIQ_DEV_KEY_B64" | base64 -d > developer_key
          chmod 600 developer_key
          test -s developer_key

      - name: Force v√≠voactive4/4s in manifest
        run: |
          set -euo pipefail
          sed -i 's/minSdkVersion="[^"]*"/minSdkVersion="3.1.0"/' manifest.xml
          perl -0777 -pe 's|<iq:products>.*?</iq:products>|<iq:products><iq:product id="vivoactive4"/><iq:product id="vivoactive4s"/></iq:products>|s' -i manifest.xml
          grep -n 'vivoactive4' manifest.xml || true

      - name: Write tools/projectInfo.xml (safe, no heredoc)
        working-directory: tools
        run: |
          set -euo pipefail
          {
            echo '<?xml version="1.0" encoding="UTF-8"?>'
            echo '<iq:projectInfo xmlns:iq="http://www.garmin.com/xml/connectiq">'
            echo '  <iq:application>'
            echo '    <iq:entry filename="../manifest.xml"/>'
            echo '    <iq:languages primary="en-US"/>'
            echo '    <iq:permissions/>'
            echo '    <iq:products>'
            echo '      <iq:product id="vivoactive4"/>'
            echo '      <iq:product id="vivoactive4s"/>'
            echo '    </iq:products>'
            echo '  </iq:application>'
            echo '  <iq:environment>'
            echo '    <iq:apiDb path="api.db"/>'
            echo '    <iq:apiMir path="api.mir"/>'
            echo '    <iq:compilerInfo path="compilerInfo.xml"/>'
            echo '  </iq:environment>'
            echo '</iq:projectInfo>'
          } > projectInfo.xml

          # Quick XML sanity check
          python3 - <<'PY'
import xml.dom.minidom as m
m.parse('projectInfo.xml')
print('projectInfo.xml OK')
PY

      - name: Build .iq (use projectInfo.xml only)
        working-directory: tools
        run: |
          set -euxo pipefail
          JAR="$PWD/monkeybrains-8.1.1.jar"
          PINFO="$PWD/projectInfo.xml"
          JUNGLE="$GITHUB_WORKSPACE/monkey.jungle"
          OUT="$GITHUB_WORKSPACE/bin/OWSwim_VA4.iq"
          KEY="$GITHUB_WORKSPACE/developer_key"

          test -s "$JAR"
          test -s "$PINFO"
          test -s "$PWD/api.db"
          test -s "$PWD/api.mir"
          test -s "$PWD/compilerInfo.xml"

          # No -d / No -u: devices are taken from <iq:products> above
          java -Xms1g -Dfile.encoding=UTF-8 -jar "$JAR" \
            -p "$PINFO" \
            -f "$JUNGLE" \
            -o "$OUT" \
            -y "$KEY" \
            -e -w

          ls -l "$OUT"

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OWSwim_VA4
          path: bin/*.iq
