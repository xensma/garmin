name: CIQ Build

on:
  workflow_dispatch:
  push:
    paths:
      - "source/**"
      - "resources/**"
      - "manifest.xml"
      - "tools/**"
      - ".github/workflows/ciq-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Normaliser encodages + créer jungle minimal
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(manifest.xml resources/**/*.xml source/**/*.mc)
          for f in "${files[@]}"; do
            [ -f "$f" ] || continue
            awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          done
          printf '%s\n' \
            'project.manifest = manifest.xml' \
            'base.sourcePath = source' \
            'base.resourcePath = resources' > monkey.jungle
          mkdir -p bin

      - name: Déposer la developer_key (depuis le secret)
        env:
          CIQ_DEV_KEY_B64: ${{ secrets.CIQ_DEV_KEY_B64 }}
        run: |
          set -euo pipefail
          : "${CIQ_DEV_KEY_B64:?Secret CIQ_DEV_KEY_B64 manquant}"
          echo "$CIQ_DEV_KEY_B64" | base64 -d > developer_key
          chmod 600 developer_key
          test -s developer_key

      - name: Forcer compat vívoactive 4/4s dans le manifest
        run: |
          set -euo pipefail
          sed -i 's/minSdkVersion="[^"]*"/minSdkVersion="3.1.0"/' manifest.xml
          perl -0777 -pe 's|<iq:products>.*?</iq:products>|<iq:products><iq:product id="vivoactive4"/><iq:product id="vivoactive4s"/></iq:products>|s' -i manifest.xml
          grep -n 'vivoactive4' manifest.xml || true

      - name: Écrire tools/projectInfo.xml (sans heredoc YAML)
        working-directory: tools
        run: |
          set -euo pipefail
          : > projectInfo.xml
          printf '%s\n' '<?xml version="1.0" encoding="UTF-8"?>' >> projectInfo.xml
          printf '%s\n' '<iq:projectInfo xmlns:iq="http://www.garmin.com/xml/connectiq">' >> projectInfo.xml
          printf '%s\n' '  <iq:application>' >> projectInfo.xml
          printf '%s\n' '    <iq:entry filename="../manifest.xml"/>' >> projectInfo.xml
          printf '%s\n' '    <iq:languages primary="en-US"/>' >> projectInfo.xml
          printf '%s\n' '    <iq:permissions/>' >> projectInfo.xml
          printf '%s\n' '    <iq:products>' >> projectInfo.xml
          printf '%s\n' '      <iq:product id="vivoactive4"/>' >> projectInfo.xml
          printf '%s\n' '      <iq:product id="vivoactive4s"/>' >> projectInfo.xml
          printf '%s\n' '    </iq:products>' >> projectInfo.xml
          printf '%s\n' '  </iq:application>' >> projectInfo.xml
          printf '%s\n' '  <iq:environment>' >> projectInfo.xml
          printf '%s\n' '    <iq:apiDb path="api.db"/>' >> projectInfo.xml
          printf '%s\n' '    <iq:apiMir path="api.mir"/>' >> projectInfo.xml
          printf '%s\n' '    <iq:compilerInfo path="compilerInfo.xml"/>' >> projectInfo.xml
          printf '%s\n' '  </iq:environment>' >> projectInfo.xml
          printf '%s\n' '</iq:projectInfo>' >> projectInfo.xml

          # Afficher pour contrôle
          sed -n '1,200p' projectInfo.xml

      - name: Build .iq (via projectInfo.xml uniquement)
        working-directory: tools
        run: |
          set -euxo pipefail
          JAR="$PWD/monkeybrains-8.1.1.jar"
          PINFO="$PWD/projectInfo.xml"
          JUNGLE="$GITHUB_WORKSPACE/monkey.jungle"
          OUT="$GITHUB_WORKSPACE/bin/OWSwim_VA4.iq"
          KEY="$GITHUB_WORKSPACE/developer_key"

          # Présence des artefacts SDK locaux
          test -s "$JAR"
          test -s "$PINFO"
          test -s "$PWD/api.db"
          test -s "$PWD/api.mir"
          test -s "$PWD/compilerInfo.xml"

          # Pas de -d / -u : les devices viennent de <iq:products> du projectInfo.xml
          java -Xms1g -Dfile.encoding=UTF-8 -jar "$JAR" \
            -a "$PWD/api.db" -b "$PWD/api.mir" \
            -p "$PINFO" \
            -f "$JUNGLE" \
            -o "$OUT" \
            -y "$KEY" \
            -e -w

          ls -l "$OUT"

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OWSwim_VA4
          path: bin/*.iq
