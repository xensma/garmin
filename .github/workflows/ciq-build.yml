name: CIQ Build

on:
  workflow_dispatch:
  push:
    paths:
      - "source/**"
      - "resources/**"
      - "manifest.xml"
      - "monkey.jungle"
      - "tools/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Normaliser encodages + jungle minimal
        shell: bash
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          files=(manifest.xml monkey.jungle resources/**/*.xml source/**/*.mc)
          for f in "${files[@]}"; do
            [ -f "$f" ] || continue
            # Retire un éventuel BOM
            awk 'NR==1{sub(/^\xef\xbb\xbf/,"")}1' "$f" > "$f.tmp" && mv "$f.tmp" "$f"
          done
          # Jungle minimal (réécrit si déjà présent)
          printf 'project.manifest = manifest.xml\nbase.sourcePath = source\nbase.resourcePath = resources\n' > monkey.jungle

      - name: Déposer la developer_key (depuis secret base64)
        shell: bash
        env:
          CIQ_DEV_KEY_B64: ${{ secrets.CIQ_DEV_KEY_B64 }}
        run: |
          set -euo pipefail
          if [ -z "${CIQ_DEV_KEY_B64:-}" ]; then
            echo "::error::Le secret CIQ_DEV_KEY_B64 est vide ou non défini."
            exit 2
          fi
          echo "$CIQ_DEV_KEY_B64" | base64 -d > developer_key
          chmod 600 developer_key

      - name: Forcer compat vívoactive 4/4s dans le manifest
        shell: bash
        run: |
          set -euo pipefail
          # Assure minSdkVersion >= 3.1.0
          sed -i 's/minSdkVersion="[^"]*"/minSdkVersion="3.1.0"/' manifest.xml || true
          # Remplace ou crée <iq:products> avec VA4/VA4s
          if grep -q '<iq:products>' manifest.xml; then
            perl -0777 -pe 's|<iq:products>.*?</iq:products>|<iq:products><iq:product id="vivoactive4"/><iq:product id="vivoactive4s"/></iq:products>|s' -i manifest.xml
          else
            perl -0777 -pe 's|</iq:application>|<iq:products><iq:product id="vivoactive4"/><iq:product id="vivoactive4s"/></iq:products></iq:application>|s' -i manifest.xml
          fi
          grep -n 'vivoactive4' manifest.xml || true

      - name: Build .iq (JAR 8.1.1 avec API)
        shell: bash
        run: |
          set -euo pipefail
          echo "=== tools contents ==="
          ls -l tools || true

          # Vérifie tous les fichiers requis AVANT build
          missing=0
          for f in api.db api.mir api.debug.xml compilerInfo.xml monkeybrains-8.1.1.jar; do
            if [ ! -f "tools/$f" ]; then
              echo "::error::Fichier manquant: tools/$f"
              missing=1
            fi
          done
          if [ "$missing" -ne 0 ]; then
            echo "::group::Aide"
            echo "Place ces fichiers depuis le SDK Connect IQ 8.1.1 :"
            echo "  tools/api.db, tools/api.mir, tools/api.debug.xml  (depuis <SDK>/api/)"
            echo "  tools/compilerInfo.xml                           (depuis <SDK>/)"
            echo "  tools/monkeybrains-8.1.1.jar                    (depuis <SDK>/bin/)"
            echo "::endgroup::"
            exit 2
          fi

          mkdir -p bin
          # Pour info : version du compiler
          java -Xms1g -Dfile.encoding=UTF-8 -jar tools/monkeybrains-8.1.1.jar -v || true

          # Compilation (avec API explicite)
          java -Xms1g -Dfile.encoding=UTF-8 -jar tools/monkeybrains-8.1.1.jar \
            -a tools/api.db \
            -b tools/api.mir \
            -i tools/api.debug.xml \
            -f "$GITHUB_WORKSPACE/monkey.jungle" \
            -o "$GITHUB_WORKSPACE/bin/OWSwim_VA4.iq" \
            -y "$GITHUB_WORKSPACE/developer_key" \
            -d "vivoactive4" -e -w

      - name: Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OWSwim_VA4
          path: bin/*.iq
          if-no-files-found: error
